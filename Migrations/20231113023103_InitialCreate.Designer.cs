// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuiviFitness.Models;

#nullable disable

namespace SuiviFitness.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231113023103_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SuiviFitness.Models.DetailSeance", b =>
                {
                    b.Property<int>("IDDetailSeance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDDetailSeance"));

                    b.Property<int>("IDExercice")
                        .HasColumnType("int");

                    b.Property<int>("IDSéance")
                        .HasColumnType("int");

                    b.Property<int>("NombreSeries")
                        .HasColumnType("int");

                    b.Property<int>("PoidsUtilise")
                        .HasColumnType("int");

                    b.Property<int>("RepetitionsParSerie")
                        .HasColumnType("int");

                    b.HasKey("IDDetailSeance");

                    b.HasIndex("IDExercice");

                    b.HasIndex("IDSéance");

                    b.ToTable("details");
                });

            modelBuilder.Entity("SuiviFitness.Models.DonneeNutritionnelle", b =>
                {
                    b.Property<int>("IDDonneeNutritionnelle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDDonneeNutritionnelle"));

                    b.Property<string>("AlimentsConsommes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Glucides")
                        .HasColumnType("int");

                    b.Property<int>("IDUtilisateur")
                        .HasColumnType("int");

                    b.Property<int>("Proteines")
                        .HasColumnType("int");

                    b.Property<string>("TypeRepas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDDonneeNutritionnelle");

                    b.HasIndex("IDUtilisateur");

                    b.ToTable("donneesNutritionnelles");
                });

            modelBuilder.Entity("SuiviFitness.Models.Exercice", b =>
                {
                    b.Property<int>("IDExercice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDExercice"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomExercice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeExercice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDExercice");

                    b.ToTable("exercices");
                });

            modelBuilder.Entity("SuiviFitness.Models.Progression", b =>
                {
                    b.Property<int>("IDProgression")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDProgression"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailsProgression")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDUtilisateur")
                        .HasColumnType("int");

                    b.Property<string>("TypeProgression")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDProgression");

                    b.HasIndex("IDUtilisateur");

                    b.ToTable("progressions");
                });

            modelBuilder.Entity("SuiviFitness.Models.RecommendationFitness", b =>
                {
                    b.Property<int>("IDRecommandation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDRecommandation"));

                    b.Property<string>("ContenuRecommandation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateRecommandation")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDUtilisateur")
                        .HasColumnType("int");

                    b.Property<string>("TypeRecommandation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDRecommandation");

                    b.HasIndex("IDUtilisateur");

                    b.ToTable("recommendations");
                });

            modelBuilder.Entity("SuiviFitness.Models.Seance", b =>
                {
                    b.Property<int>("IDSeance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateHeure")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDUtilisateur")
                        .HasColumnType("int");

                    b.HasKey("IDSeance");

                    b.ToTable("seances");
                });

            modelBuilder.Entity("SuiviFitness.Models.Utilisateur", b =>
                {
                    b.Property<int>("IDUtilisateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDUtilisateur"));

                    b.Property<string>("adresseEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("certifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("motDePasseHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeUtilisateur")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDUtilisateur");

                    b.ToTable("listeUtilisateur");
                });

            modelBuilder.Entity("SuiviFitness.Models.DetailSeance", b =>
                {
                    b.HasOne("SuiviFitness.Models.Exercice", "Exercice")
                        .WithMany("DetailsSeanceEntrainement")
                        .HasForeignKey("IDExercice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuiviFitness.Models.Seance", "SeanceEntrainement")
                        .WithMany()
                        .HasForeignKey("IDSéance")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercice");

                    b.Navigation("SeanceEntrainement");
                });

            modelBuilder.Entity("SuiviFitness.Models.DonneeNutritionnelle", b =>
                {
                    b.HasOne("SuiviFitness.Models.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("IDUtilisateur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("SuiviFitness.Models.Progression", b =>
                {
                    b.HasOne("SuiviFitness.Models.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("IDUtilisateur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("SuiviFitness.Models.RecommendationFitness", b =>
                {
                    b.HasOne("SuiviFitness.Models.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("IDUtilisateur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("SuiviFitness.Models.Seance", b =>
                {
                    b.HasOne("SuiviFitness.Models.Utilisateur", "Utilisateur")
                        .WithMany("SeancesEntrainements")
                        .HasForeignKey("IDSeance")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("SuiviFitness.Models.Exercice", b =>
                {
                    b.Navigation("DetailsSeanceEntrainement");
                });

            modelBuilder.Entity("SuiviFitness.Models.Utilisateur", b =>
                {
                    b.Navigation("SeancesEntrainements");
                });
#pragma warning restore 612, 618
        }
    }
}
